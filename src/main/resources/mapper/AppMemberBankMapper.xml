<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="my.fast.admin.app.mapper.AppMemberBankMapper">
  <resultMap id="BaseResultMap" type="my.fast.admin.app.entity.AppMemberBank">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_number" jdbcType="VARCHAR" property="bankNumber" />
    <result column="card_num" jdbcType="VARCHAR" property="cardNum" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="site" jdbcType="VARCHAR" property="site" />
    <result column="bank_country" jdbcType="VARCHAR" property="bankCountry" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, member_id, bank_name, bank_number, card_num, account_name, site, bank_country, 
    tel, status, email
  </sql>
  <select id="selectByExample" parameterType="my.fast.admin.app.entity.AppMemberBankExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from app_member_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from app_member_bank
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from app_member_bank
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="my.fast.admin.app.entity.AppMemberBankExample">
    delete from app_member_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="my.fast.admin.app.entity.AppMemberBank">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into app_member_bank (member_id, bank_name, bank_number, 
      card_num, account_name, site, 
      bank_country, tel, status, 
      email)
    values (#{memberId,jdbcType=BIGINT}, #{bankName,jdbcType=VARCHAR}, #{bankNumber,jdbcType=VARCHAR},
      #{cardNum,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, #{site,jdbcType=VARCHAR}, 
      #{bankCountry,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="my.fast.admin.app.entity.AppMemberBank">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into app_member_bank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_id,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankNumber != null">
        bank_number,
      </if>
      <if test="cardNum != null">
        card_num,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="site != null">
        site,
      </if>
      <if test="bankCountry != null">
        bank_country,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankNumber != null">
        #{bankNumber,jdbcType=VARCHAR},
      </if>
      <if test="cardNum != null">
        #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="site != null">
        #{site,jdbcType=VARCHAR},
      </if>
      <if test="bankCountry != null">
        #{bankCountry,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="my.fast.admin.app.entity.AppMemberBankExample" resultType="java.lang.Long">
    select count(*) from app_member_bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update app_member_bank
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankNumber != null">
        bank_number = #{record.bankNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNum != null">
        card_num = #{record.cardNum,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null">
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.site != null">
        site = #{record.site,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCountry != null">
        bank_country = #{record.bankCountry,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update app_member_bank
    set id = #{record.id,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_number = #{record.bankNumber,jdbcType=VARCHAR},
      card_num = #{record.cardNum,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      site = #{record.site,jdbcType=VARCHAR},
      bank_country = #{record.bankCountry,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="my.fast.admin.app.entity.AppMemberBank">
    update app_member_bank
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankNumber != null">
        bank_number = #{bankNumber,jdbcType=VARCHAR},
      </if>
      <if test="cardNum != null">
        card_num = #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="site != null">
        site = #{site,jdbcType=VARCHAR},
      </if>
      <if test="bankCountry != null">
        bank_country = #{bankCountry,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="my.fast.admin.app.entity.AppMemberBank">
    update app_member_bank
    set member_id = #{memberId,jdbcType=BIGINT},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_number = #{bankNumber,jdbcType=VARCHAR},
      card_num = #{cardNum,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      site = #{site,jdbcType=VARCHAR},
      bank_country = #{bankCountry,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>