<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="my.fast.admin.cg.mapper.AppMemberLevelMapper">
  <resultMap id="BaseResultMap" type="my.fast.admin.cg.entity.AppMemberLevel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="members_name" jdbcType="VARCHAR" property="membersName" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
    <result column="member_price" jdbcType="DECIMAL" property="memberPrice" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="commission" jdbcType="DECIMAL" property="commission" />
    <result column="members_level" jdbcType="INTEGER" property="membersLevel" />
    <result column="withdrawal_times" jdbcType="INTEGER" property="withdrawalTimes" />
    <result column="withdrawal_min" jdbcType="DECIMAL" property="withdrawalMin" />
    <result column="withdrawal_max" jdbcType="DECIMAL" property="withdrawalMax" />
    <result column="num_min" jdbcType="DECIMAL" property="numMin" />
    <result column="withdrawal_nim_order" jdbcType="INTEGER" property="withdrawalNimOrder" />
    <result column="auto_vip_xu_num" jdbcType="INTEGER" property="autoVipXuNum" />
    <result column="service_charge" jdbcType="DECIMAL" property="serviceCharge" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="channel_id" jdbcType="BIGINT" property="channelId" />
    <result column="mate_min" jdbcType="DECIMAL" property="mateMin" />
    <result column="mate_max" jdbcType="DECIMAL" property="mateMax" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, members_name, order_num, member_price, register_time, commission, members_level, 
    withdrawal_times, withdrawal_min, withdrawal_max, num_min, withdrawal_nim_order, 
    auto_vip_xu_num, service_charge, pic, channel_id, mate_min, mate_max
  </sql>
  <select id="selectByExample" parameterType="my.fast.admin.cg.entity.AppMemberLevelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from app_member_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from app_member_level
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from app_member_level
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="my.fast.admin.cg.entity.AppMemberLevelExample">
    delete from app_member_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="my.fast.admin.cg.entity.AppMemberLevel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into app_member_level (members_name, order_num, member_price, 
      register_time, commission, members_level, 
      withdrawal_times, withdrawal_min, withdrawal_max, 
      num_min, withdrawal_nim_order, auto_vip_xu_num, 
      service_charge, pic, channel_id, 
      mate_min, mate_max)
    values (#{membersName,jdbcType=VARCHAR}, #{orderNum,jdbcType=INTEGER}, #{memberPrice,jdbcType=DECIMAL}, 
      #{registerTime,jdbcType=TIMESTAMP}, #{commission,jdbcType=DECIMAL}, #{membersLevel,jdbcType=INTEGER}, 
      #{withdrawalTimes,jdbcType=INTEGER}, #{withdrawalMin,jdbcType=DECIMAL}, #{withdrawalMax,jdbcType=DECIMAL}, 
      #{numMin,jdbcType=DECIMAL}, #{withdrawalNimOrder,jdbcType=INTEGER}, #{autoVipXuNum,jdbcType=INTEGER}, 
      #{serviceCharge,jdbcType=DECIMAL}, #{pic,jdbcType=VARCHAR}, #{channelId,jdbcType=BIGINT}, 
      #{mateMin,jdbcType=DECIMAL}, #{mateMax,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="my.fast.admin.cg.entity.AppMemberLevel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into app_member_level
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="membersName != null">
        members_name,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="memberPrice != null">
        member_price,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="commission != null">
        commission,
      </if>
      <if test="membersLevel != null">
        members_level,
      </if>
      <if test="withdrawalTimes != null">
        withdrawal_times,
      </if>
      <if test="withdrawalMin != null">
        withdrawal_min,
      </if>
      <if test="withdrawalMax != null">
        withdrawal_max,
      </if>
      <if test="numMin != null">
        num_min,
      </if>
      <if test="withdrawalNimOrder != null">
        withdrawal_nim_order,
      </if>
      <if test="autoVipXuNum != null">
        auto_vip_xu_num,
      </if>
      <if test="serviceCharge != null">
        service_charge,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="mateMin != null">
        mate_min,
      </if>
      <if test="mateMax != null">
        mate_max,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="membersName != null">
        #{membersName,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="memberPrice != null">
        #{memberPrice,jdbcType=DECIMAL},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commission != null">
        #{commission,jdbcType=DECIMAL},
      </if>
      <if test="membersLevel != null">
        #{membersLevel,jdbcType=INTEGER},
      </if>
      <if test="withdrawalTimes != null">
        #{withdrawalTimes,jdbcType=INTEGER},
      </if>
      <if test="withdrawalMin != null">
        #{withdrawalMin,jdbcType=DECIMAL},
      </if>
      <if test="withdrawalMax != null">
        #{withdrawalMax,jdbcType=DECIMAL},
      </if>
      <if test="numMin != null">
        #{numMin,jdbcType=DECIMAL},
      </if>
      <if test="withdrawalNimOrder != null">
        #{withdrawalNimOrder,jdbcType=INTEGER},
      </if>
      <if test="autoVipXuNum != null">
        #{autoVipXuNum,jdbcType=INTEGER},
      </if>
      <if test="serviceCharge != null">
        #{serviceCharge,jdbcType=DECIMAL},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=BIGINT},
      </if>
      <if test="mateMin != null">
        #{mateMin,jdbcType=DECIMAL},
      </if>
      <if test="mateMax != null">
        #{mateMax,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="my.fast.admin.cg.entity.AppMemberLevelExample" resultType="java.lang.Long">
    select count(*) from app_member_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update app_member_level
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.membersName != null">
        members_name = #{row.membersName,jdbcType=VARCHAR},
      </if>
      <if test="row.orderNum != null">
        order_num = #{row.orderNum,jdbcType=INTEGER},
      </if>
      <if test="row.memberPrice != null">
        member_price = #{row.memberPrice,jdbcType=DECIMAL},
      </if>
      <if test="row.registerTime != null">
        register_time = #{row.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.commission != null">
        commission = #{row.commission,jdbcType=DECIMAL},
      </if>
      <if test="row.membersLevel != null">
        members_level = #{row.membersLevel,jdbcType=INTEGER},
      </if>
      <if test="row.withdrawalTimes != null">
        withdrawal_times = #{row.withdrawalTimes,jdbcType=INTEGER},
      </if>
      <if test="row.withdrawalMin != null">
        withdrawal_min = #{row.withdrawalMin,jdbcType=DECIMAL},
      </if>
      <if test="row.withdrawalMax != null">
        withdrawal_max = #{row.withdrawalMax,jdbcType=DECIMAL},
      </if>
      <if test="row.numMin != null">
        num_min = #{row.numMin,jdbcType=DECIMAL},
      </if>
      <if test="row.withdrawalNimOrder != null">
        withdrawal_nim_order = #{row.withdrawalNimOrder,jdbcType=INTEGER},
      </if>
      <if test="row.autoVipXuNum != null">
        auto_vip_xu_num = #{row.autoVipXuNum,jdbcType=INTEGER},
      </if>
      <if test="row.serviceCharge != null">
        service_charge = #{row.serviceCharge,jdbcType=DECIMAL},
      </if>
      <if test="row.pic != null">
        pic = #{row.pic,jdbcType=VARCHAR},
      </if>
      <if test="row.channelId != null">
        channel_id = #{row.channelId,jdbcType=BIGINT},
      </if>
      <if test="row.mateMin != null">
        mate_min = #{row.mateMin,jdbcType=DECIMAL},
      </if>
      <if test="row.mateMax != null">
        mate_max = #{row.mateMax,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update app_member_level
    set id = #{row.id,jdbcType=BIGINT},
      members_name = #{row.membersName,jdbcType=VARCHAR},
      order_num = #{row.orderNum,jdbcType=INTEGER},
      member_price = #{row.memberPrice,jdbcType=DECIMAL},
      register_time = #{row.registerTime,jdbcType=TIMESTAMP},
      commission = #{row.commission,jdbcType=DECIMAL},
      members_level = #{row.membersLevel,jdbcType=INTEGER},
      withdrawal_times = #{row.withdrawalTimes,jdbcType=INTEGER},
      withdrawal_min = #{row.withdrawalMin,jdbcType=DECIMAL},
      withdrawal_max = #{row.withdrawalMax,jdbcType=DECIMAL},
      num_min = #{row.numMin,jdbcType=DECIMAL},
      withdrawal_nim_order = #{row.withdrawalNimOrder,jdbcType=INTEGER},
      auto_vip_xu_num = #{row.autoVipXuNum,jdbcType=INTEGER},
      service_charge = #{row.serviceCharge,jdbcType=DECIMAL},
      pic = #{row.pic,jdbcType=VARCHAR},
      channel_id = #{row.channelId,jdbcType=BIGINT},
      mate_min = #{row.mateMin,jdbcType=DECIMAL},
      mate_max = #{row.mateMax,jdbcType=DECIMAL}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="my.fast.admin.cg.entity.AppMemberLevel">
    update app_member_level
    <set>
      <if test="membersName != null">
        members_name = #{membersName,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="memberPrice != null">
        member_price = #{memberPrice,jdbcType=DECIMAL},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commission != null">
        commission = #{commission,jdbcType=DECIMAL},
      </if>
      <if test="membersLevel != null">
        members_level = #{membersLevel,jdbcType=INTEGER},
      </if>
      <if test="withdrawalTimes != null">
        withdrawal_times = #{withdrawalTimes,jdbcType=INTEGER},
      </if>
      <if test="withdrawalMin != null">
        withdrawal_min = #{withdrawalMin,jdbcType=DECIMAL},
      </if>
      <if test="withdrawalMax != null">
        withdrawal_max = #{withdrawalMax,jdbcType=DECIMAL},
      </if>
      <if test="numMin != null">
        num_min = #{numMin,jdbcType=DECIMAL},
      </if>
      <if test="withdrawalNimOrder != null">
        withdrawal_nim_order = #{withdrawalNimOrder,jdbcType=INTEGER},
      </if>
      <if test="autoVipXuNum != null">
        auto_vip_xu_num = #{autoVipXuNum,jdbcType=INTEGER},
      </if>
      <if test="serviceCharge != null">
        service_charge = #{serviceCharge,jdbcType=DECIMAL},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=BIGINT},
      </if>
      <if test="mateMin != null">
        mate_min = #{mateMin,jdbcType=DECIMAL},
      </if>
      <if test="mateMax != null">
        mate_max = #{mateMax,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="my.fast.admin.cg.entity.AppMemberLevel">
    update app_member_level
    set members_name = #{membersName,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      member_price = #{memberPrice,jdbcType=DECIMAL},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      commission = #{commission,jdbcType=DECIMAL},
      members_level = #{membersLevel,jdbcType=INTEGER},
      withdrawal_times = #{withdrawalTimes,jdbcType=INTEGER},
      withdrawal_min = #{withdrawalMin,jdbcType=DECIMAL},
      withdrawal_max = #{withdrawalMax,jdbcType=DECIMAL},
      num_min = #{numMin,jdbcType=DECIMAL},
      withdrawal_nim_order = #{withdrawalNimOrder,jdbcType=INTEGER},
      auto_vip_xu_num = #{autoVipXuNum,jdbcType=INTEGER},
      service_charge = #{serviceCharge,jdbcType=DECIMAL},
      pic = #{pic,jdbcType=VARCHAR},
      channel_id = #{channelId,jdbcType=BIGINT},
      mate_min = #{mateMin,jdbcType=DECIMAL},
      mate_max = #{mateMax,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>